{"version":2,"kind":"Notebook","sha256":"e29339a853c7285f2b1919b6ed12a2444cb49e595cb0f737daec4952c60196b9","slug":"notebooks.courses.microwave-remote-sensing.unit-01.in-class-exercise-1","location":"/notebooks/courses/microwave-remote-sensing/unit_01/02_in_class_exercise.ipynb","dependencies":[],"frontmatter":{"title":"Unit Conversion","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Wolfgang Wagner","given":"Wolfgang","family":"Wagner"},"name":"Wolfgang Wagner","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Martin Schobben","given":"Martin","family":"Schobben"},"name":"Martin Schobben","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Nikolas Pikall","given":"Nikolas","family":"Pikall"},"name":"Nikolas Pikall","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Joseph Wagner","given":"Joseph","family":"Wagner"},"name":"Joseph Wagner","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Davide Festa","given":"Davide","family":"Festa"},"name":"Davide Festa","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Felix David Reuß","given":"Felix David","family":"Reuß"},"name":"Felix David Reuß","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Luka Jović","given":"Luka","family":"Jović"},"name":"Luka Jović","id":"contributors-myst-generated-uid-6"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"copyright":"2024","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":2}},"exports":[{"format":"ipynb","filename":"02_in_class_exercise.ipynb","url":"/eo-datascience-cookbook/build/02_in_class_exercise-056a4b32f5816c1d01d93f193d7dd220.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In this notebook, we are going to have a look at the conversion of units. Sentinel-1 data, and most other SAR data, is usually provided in decibels (dB). In this notebook, we will discover the advantages of displaying SAR data in decibels and why we need to convert the data to a linear scale in order to make meaningful calculations. Let’s start with importing some libraries.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RqRagXCNg7"}],"key":"uX9cJAnMA8"},{"type":"math","value":"\\text{logarithmic} \\longleftrightarrow \\text{linear}","position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>logarithmic</mtext><mo>⟷</mo><mtext>linear</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{logarithmic} \\longleftrightarrow \\text{linear}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">logarithmic</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⟷</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">linear</span></span></span></span></span></span>","enumerator":"1","key":"HOck5wuFjq"},{"type":"math","value":"[\\text{dB}] \\longleftrightarrow [\\text{m}^2 \\cdot \\text{m}^{-2}]","position":{"start":{"line":8,"column":1},"end":{"line":10,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">[</mo><mtext>dB</mtext><mo stretchy=\"false\">]</mo><mo>⟷</mo><mo stretchy=\"false\">[</mo><msup><mtext>m</mtext><mn>2</mn></msup><mo>⋅</mo><msup><mtext>m</mtext><mrow><mo>−</mo><mn>2</mn></mrow></msup><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[\\text{dB}] \\longleftrightarrow [\\text{m}^2 \\cdot \\text{m}^{-2}]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord text\"><span class=\"mord\">dB</span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⟷</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">m</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">m</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span>","enumerator":"2","key":"X9sLUfWaVZ"}],"key":"yq321BXR6e"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import matplotlib.pyplot as plt\nimport numpy as np\nimport odc.stac\nimport pystac_client\nimport rioxarray  # noqa: F401","key":"ga9H9OX82F"},{"type":"output","id":"RnDjnXPtBPSX3feyi48Nw","data":[],"key":"IqTYC5kGsQ"}],"key":"sGYPLGMPEI"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Exploring the Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pLxb4THNu2"}],"identifier":"exploring-the-data","label":"Exploring the Data","html_id":"exploring-the-data","implicit":true,"key":"T4qszKECVV"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Let’s start by loading some sample data, in order to demonstrate why this conversion is important.\nHere we will have a look at some SAR data from the Sentinel-1. The data is provided in decibels (dB).\nIn the following example, we will:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bA8W0j1xRj"}],"key":"eFZq9aOaJY"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"load data from Sentinel-1","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"YUxTKfTJEL"}],"key":"yByBHdLKkl"}],"key":"PAJCfLkLaC"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"visualize the data in logarithmic scale","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"gOIKPX6PiD"}],"key":"zaqCaPemC6"}],"key":"Al7Tj14ImS"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"compare the data with linear scale","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"meK3trrS2p"}],"key":"vrPp5KeaBB"}],"key":"xTJY64bHrh"}],"key":"Pw7Zu6evAw"},{"type":"heading","depth":2,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Search for some Data","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"h7xY23JQam"}],"identifier":"search-for-some-data","label":"Search for some Data","html_id":"search-for-some-data","implicit":true,"key":"YPOKKbaEAC"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Now, we start by loading data from Sentinel-1 from the EODC STAC Catalogue. We do this in the same way as in the previous notebook “Discover and Read SAR Data”.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"ScOgmJbAgw"}],"key":"q6xC8CdB2t"}],"key":"vDUVldpEyY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"latmin, latmax = 48, 48.5\nlonmin, lonmax = 16, 17\nbounds = (lonmin, latmin, lonmax, latmax)\n\ntime_range = \"2022-07-01/2022-07-31\"\n\nitems = (\n    pystac_client.Client.open(\"https://stac.eodc.eu/api/v1\")\n    .search(\n        bbox=bounds,\n        collections=[\"SENTINEL1_SIG0_20M\"],\n        datetime=time_range,\n        limit=100,\n    )\n    .item_collection()\n)\n\nprint(len(items), \"scenes found\")","key":"mNn5Mm06Ez"},{"type":"output","id":"nYTAhtZGy7RTpA6qqWPaq","data":[{"output_type":"stream","name":"stdout","text":"60 scenes found\n"}],"key":"uuPYGPGDkE"}],"key":"mJTiyBRthW"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"bands = \"VV\"\n\nsig0_dc = odc.stac.stac_load(\n    items,\n    bands=bands,\n    bbox=bounds,\n    chunks={\"time\": 5, \"x\": 1000, \"y\": 1000},\n)\n\nnodata = items[0].assets[\"VV\"].extra_fields[\"raster:bands\"][0][\"nodata\"]\nscale = items[0].assets[\"VV\"].extra_fields[\"raster:bands\"][0][\"scale\"]\n\nsig0_dc = (sig0_dc.where(sig0_dc != nodata) / scale).VV\nsig0_dc","key":"trS6r9tgYQ"},{"type":"output","id":"EAHicwKyUkDygIUj5-gLC","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"<xarray.DataArray 'VV' (time: 60, y: 3150, x: 3978)> Size: 3GB\ndask.array<truediv, shape=(60, 3150, 3978), dtype=float32, chunksize=(5, 1000, 1000), chunktype=numpy.ndarray>\nCoordinates:\n  * time         (time) datetime64[ns] 480B 2022-07-02T05:18:03 ... 2022-07-3...\n  * y            (y) float64 25kB 1.653e+06 1.653e+06 ... 1.59e+06 1.59e+06\n  * x            (x) float64 32kB 5.241e+06 5.241e+06 ... 5.32e+06 5.32e+06\n    spatial_ref  int32 4B 27704","content_type":"text/plain"},"text/html":{"content_type":"text/html","hash":"74420790971610c936c25bf775024d46","path":"/eo-datascience-cookbook/build/74420790971610c936c25bf775024d46.html"}}}],"key":"P85qb56wBj"}],"key":"CxvEcHyQW1"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Comparison of the Data in dB and Linear Scale","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PkYCS7i3jO"}],"identifier":"comparison-of-the-data-in-db-and-linear-scale","label":"Comparison of the Data in dB and Linear Scale","html_id":"comparison-of-the-data-in-db-and-linear-scale","implicit":true,"key":"UO56f6xS4w"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In the next two cells we will select a subset of the data. This is done to reduce the amount of data we are working with. The precise workflow is not important for now, since the theory is explained after the cells. They are just here to show the data we are working with.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JtdATBGLr4"}],"key":"IGi2OEcOhN"}],"key":"Rkm4schFrw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"subset = sig0_dc.sel(time=slice(\"2022-07-01\", \"2022-07-07\"))\nsubset = subset.dropna(\"time\", how=\"all\")","key":"CydWA6LpjC"},{"type":"output","id":"t5ZcOJbDcmxaje4_U-MuE","data":[{"output_type":"stream","name":"stderr","text":"Aborting load due to failure while reading: https://data.eodc.eu/collections/SENTINEL1_SIG0_20M/V1M1R1/EQUI7_EU020M/E051N015T3/SIG0_20220707T163510__VV_A175_E051N015T3_EU020M_V1M1R1_S1AIWGRDH_TUWIEN.tif:1\n"},{"output_type":"stream","name":"stderr","text":"Aborting load due to failure while reading: https://data.eodc.eu/collections/SENTINEL1_SIG0_20M/V1M1R1/EQUI7_EU020M/E051N015T3/SIG0_20220707T163510__VV_A175_E051N015T3_EU020M_V1M1R1_S1AIWGRDH_TUWIEN.tif:1\n"},{"output_type":"stream","name":"stderr","text":"Aborting load due to failure while reading: https://data.eodc.eu/collections/SENTINEL1_SIG0_20M/V1M1R1/EQUI7_EU020M/E051N015T3/SIG0_20220707T163510__VV_A175_E051N015T3_EU020M_V1M1R1_S1AIWGRDH_TUWIEN.tif:1\n"},{"output_type":"stream","name":"stderr","text":"Aborting load due to failure while reading: https://data.eodc.eu/collections/SENTINEL1_SIG0_20M/V1M1R1/EQUI7_EU020M/E051N015T3/SIG0_20220707T163510__VV_A175_E051N015T3_EU020M_V1M1R1_S1AIWGRDH_TUWIEN.tif:1\n"},{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mCPLE_HttpResponseError\u001b[39m                    Traceback (most recent call last)\n\u001b[36mFile \u001b[39m\u001b[32mrasterio/_base.pyx:310\u001b[39m, in \u001b[36mrasterio._base.DatasetBase.__init__\u001b[39m\u001b[34m()\u001b[39m\n\n\u001b[36mFile \u001b[39m\u001b[32mrasterio/_base.pyx:221\u001b[39m, in \u001b[36mrasterio._base.open_dataset\u001b[39m\u001b[34m()\u001b[39m\n\n\u001b[36mFile \u001b[39m\u001b[32mrasterio/_err.pyx:359\u001b[39m, in \u001b[36mrasterio._err.exc_wrap_pointer\u001b[39m\u001b[34m()\u001b[39m\n\n\u001b[31mCPLE_HttpResponseError\u001b[39m: CURL error: Failed to connect to data.eodc.eu port 443 after 135066 ms: Could not connect to server\n\nDuring handling of the above exception, another exception occurred:\n\n\u001b[31mRasterioIOError\u001b[39m                           Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[4]\u001b[39m\u001b[32m, line 2\u001b[39m\n\u001b[32m      1\u001b[39m subset = sig0_dc.sel(time=\u001b[38;5;28mslice\u001b[39m(\u001b[33m\"\u001b[39m\u001b[33m2022-07-01\u001b[39m\u001b[33m\"\u001b[39m, \u001b[33m\"\u001b[39m\u001b[33m2022-07-07\u001b[39m\u001b[33m\"\u001b[39m))\n\u001b[32m----> \u001b[39m\u001b[32m2\u001b[39m subset = \u001b[43msubset\u001b[49m\u001b[43m.\u001b[49m\u001b[43mdropna\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mtime\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mhow\u001b[49m\u001b[43m=\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mall\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/eo-datascience-cookbook/lib/python3.13/site-packages/xarray/core/dataarray.py:3491\u001b[39m, in \u001b[36mDataArray.dropna\u001b[39m\u001b[34m(self, dim, how, thresh)\u001b[39m\n\u001b[32m   3417\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mdropna\u001b[39m(\n\u001b[32m   3418\u001b[39m     \u001b[38;5;28mself\u001b[39m,\n\u001b[32m   3419\u001b[39m     dim: Hashable,\n\u001b[32m   (...)\u001b[39m\u001b[32m   3422\u001b[39m     thresh: \u001b[38;5;28mint\u001b[39m | \u001b[38;5;28;01mNone\u001b[39;00m = \u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[32m   3423\u001b[39m ) -> Self:\n\u001b[32m   3424\u001b[39m \u001b[38;5;250m    \u001b[39m\u001b[33;03m\"\"\"Returns a new array with dropped labels for missing values along\u001b[39;00m\n\u001b[32m   3425\u001b[39m \u001b[33;03m    the provided dimension.\u001b[39;00m\n\u001b[32m   3426\u001b[39m \n\u001b[32m   (...)\u001b[39m\u001b[32m   3489\u001b[39m \u001b[33;03m    Dimensions without coordinates: Y, X\u001b[39;00m\n\u001b[32m   3490\u001b[39m \u001b[33;03m    \"\"\"\u001b[39;00m\n\u001b[32m-> \u001b[39m\u001b[32m3491\u001b[39m     ds = \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m_to_temp_dataset\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m.\u001b[49m\u001b[43mdropna\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdim\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mhow\u001b[49m\u001b[43m=\u001b[49m\u001b[43mhow\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mthresh\u001b[49m\u001b[43m=\u001b[49m\u001b[43mthresh\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   3492\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m._from_temp_dataset(ds)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/eo-datascience-cookbook/lib/python3.13/site-packages/xarray/core/dataset.py:6370\u001b[39m, in \u001b[36mDataset.dropna\u001b[39m\u001b[34m(self, dim, how, thresh, subset)\u001b[39m\n\u001b[32m   6368\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m dim \u001b[38;5;129;01min\u001b[39;00m array.dims:\n\u001b[32m   6369\u001b[39m         dims = [d \u001b[38;5;28;01mfor\u001b[39;00m d \u001b[38;5;129;01min\u001b[39;00m array.dims \u001b[38;5;28;01mif\u001b[39;00m d != dim]\n\u001b[32m-> \u001b[39m\u001b[32m6370\u001b[39m         count += \u001b[43mto_numpy\u001b[49m\u001b[43m(\u001b[49m\u001b[43marray\u001b[49m\u001b[43m.\u001b[49m\u001b[43mcount\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdims\u001b[49m\u001b[43m)\u001b[49m\u001b[43m.\u001b[49m\u001b[43mdata\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   6371\u001b[39m         size += math.prod([\u001b[38;5;28mself\u001b[39m.sizes[d] \u001b[38;5;28;01mfor\u001b[39;00m d \u001b[38;5;129;01min\u001b[39;00m dims])\n\u001b[32m   6373\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m thresh \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/eo-datascience-cookbook/lib/python3.13/site-packages/xarray/namedarray/pycompat.py:117\u001b[39m, in \u001b[36mto_numpy\u001b[39m\u001b[34m(data, **kwargs)\u001b[39m\n\u001b[32m    115\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m is_chunked_array(data):\n\u001b[32m    116\u001b[39m     chunkmanager = get_chunked_array_type(data)\n\u001b[32m--> \u001b[39m\u001b[32m117\u001b[39m     data, *_ = \u001b[43mchunkmanager\u001b[49m\u001b[43m.\u001b[49m\u001b[43mcompute\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdata\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    118\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(data, array_type(\u001b[33m\"\u001b[39m\u001b[33mcupy\u001b[39m\u001b[33m\"\u001b[39m)):\n\u001b[32m    119\u001b[39m     data = data.get()\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/eo-datascience-cookbook/lib/python3.13/site-packages/xarray/namedarray/daskmanager.py:85\u001b[39m, in \u001b[36mDaskManager.compute\u001b[39m\u001b[34m(self, *data, **kwargs)\u001b[39m\n\u001b[32m     80\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mcompute\u001b[39m(\n\u001b[32m     81\u001b[39m     \u001b[38;5;28mself\u001b[39m, *data: Any, **kwargs: Any\n\u001b[32m     82\u001b[39m ) -> \u001b[38;5;28mtuple\u001b[39m[np.ndarray[Any, _DType_co], ...]:\n\u001b[32m     83\u001b[39m     \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mdask\u001b[39;00m\u001b[34;01m.\u001b[39;00m\u001b[34;01marray\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m compute\n\u001b[32m---> \u001b[39m\u001b[32m85\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mcompute\u001b[49m\u001b[43m(\u001b[49m\u001b[43m*\u001b[49m\u001b[43mdata\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/eo-datascience-cookbook/lib/python3.13/site-packages/dask/base.py:681\u001b[39m, in \u001b[36mcompute\u001b[39m\u001b[34m(traverse, optimize_graph, scheduler, get, *args, **kwargs)\u001b[39m\n\u001b[32m    678\u001b[39m     expr = expr.optimize()\n\u001b[32m    679\u001b[39m     keys = \u001b[38;5;28mlist\u001b[39m(flatten(expr.__dask_keys__()))\n\u001b[32m--> \u001b[39m\u001b[32m681\u001b[39m     results = \u001b[43mschedule\u001b[49m\u001b[43m(\u001b[49m\u001b[43mexpr\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkeys\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    683\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m repack(results)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/eo-datascience-cookbook/lib/python3.13/site-packages/odc/loader/_builder.py:436\u001b[39m, in \u001b[36m_dask_loader_tyx\u001b[39m\u001b[34m(srcs, gbt, iyx, prefix_dims, postfix_dims, cfg, rdr, env, load_state, selection)\u001b[39m\n\u001b[32m    434\u001b[39m \u001b[38;5;28;01mwith\u001b[39;00m rdr.restore_env(env, load_state):\n\u001b[32m    435\u001b[39m     \u001b[38;5;28;01mfor\u001b[39;00m ti, ti_srcs \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28menumerate\u001b[39m(srcs):\n\u001b[32m--> \u001b[39m\u001b[32m436\u001b[39m         \u001b[43m_fill_nd_slice\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    437\u001b[39m \u001b[43m            \u001b[49m\u001b[43mti_srcs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgbox\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcfg\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mchunk\u001b[49m\u001b[43m[\u001b[49m\u001b[43mti\u001b[49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mydim\u001b[49m\u001b[43m=\u001b[49m\u001b[43mydim\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mselection\u001b[49m\u001b[43m=\u001b[49m\u001b[43mselection\u001b[49m\n\u001b[32m    438\u001b[39m \u001b[43m        \u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    439\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m chunk\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/eo-datascience-cookbook/lib/python3.13/site-packages/odc/loader/_builder.py:513\u001b[39m, in \u001b[36m_fill_nd_slice\u001b[39m\u001b[34m(srcs, dst_gbox, cfg, dst, ydim, selection)\u001b[39m\n\u001b[32m    510\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m dst\n\u001b[32m    512\u001b[39m src, *rest = srcs\n\u001b[32m--> \u001b[39m\u001b[32m513\u001b[39m yx_roi, pix = \u001b[43msrc\u001b[49m\u001b[43m.\u001b[49m\u001b[43mread\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcfg\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdst_gbox\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdst\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdst\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mselection\u001b[49m\u001b[43m=\u001b[49m\u001b[43mselection\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    514\u001b[39m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(yx_roi) == \u001b[32m2\u001b[39m\n\u001b[32m    515\u001b[39m \u001b[38;5;28;01massert\u001b[39;00m pix.ndim == dst.ndim\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/eo-datascience-cookbook/lib/python3.13/site-packages/odc/loader/_rio.py:115\u001b[39m, in \u001b[36mRioReader.read\u001b[39m\u001b[34m(self, cfg, dst_geobox, dst, selection)\u001b[39m\n\u001b[32m    107\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mread\u001b[39m(\n\u001b[32m    108\u001b[39m     \u001b[38;5;28mself\u001b[39m,\n\u001b[32m    109\u001b[39m     cfg: RasterLoadParams,\n\u001b[32m   (...)\u001b[39m\u001b[32m    113\u001b[39m     selection: Optional[ReaderSubsetSelection] = \u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[32m    114\u001b[39m ) -> \u001b[38;5;28mtuple\u001b[39m[\u001b[38;5;28mtuple\u001b[39m[\u001b[38;5;28mslice\u001b[39m, \u001b[38;5;28mslice\u001b[39m], np.ndarray]:\n\u001b[32m--> \u001b[39m\u001b[32m115\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mrio_read\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m_src\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcfg\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdst_geobox\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdst\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdst\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mselection\u001b[49m\u001b[43m=\u001b[49m\u001b[43mselection\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/eo-datascience-cookbook/lib/python3.13/site-packages/odc/loader/_rio.py:526\u001b[39m, in \u001b[36mrio_read\u001b[39m\u001b[34m(src, cfg, dst_geobox, dst, selection)\u001b[39m\n\u001b[32m    520\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m cfg.fail_on_error:\n\u001b[32m    521\u001b[39m         log.error(\n\u001b[32m    522\u001b[39m             \u001b[33m\"\u001b[39m\u001b[33mAborting load due to failure while reading: \u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[33m:\u001b[39m\u001b[38;5;132;01m%d\u001b[39;00m\u001b[33m\"\u001b[39m,\n\u001b[32m    523\u001b[39m             src.uri,\n\u001b[32m    524\u001b[39m             src.band,\n\u001b[32m    525\u001b[39m         )\n\u001b[32m--> \u001b[39m\u001b[32m526\u001b[39m         \u001b[38;5;28;01mraise\u001b[39;00m e\n\u001b[32m    527\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m rasterio.errors.RasterioError \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[32m    528\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m cfg.fail_on_error:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/eo-datascience-cookbook/lib/python3.13/site-packages/odc/loader/_rio.py:512\u001b[39m, in \u001b[36mrio_read\u001b[39m\u001b[34m(src, cfg, dst_geobox, dst, selection)\u001b[39m\n\u001b[32m    508\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m roi, out.transpose([\u001b[32m1\u001b[39m, \u001b[32m2\u001b[39m, \u001b[32m0\u001b[39m])\n\u001b[32m    510\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m    511\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m fixup_out(\n\u001b[32m--> \u001b[39m\u001b[32m512\u001b[39m         \u001b[43m_rio_read\u001b[49m\u001b[43m(\u001b[49m\u001b[43msrc\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcfg\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdst_geobox\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mprep_dst\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdst\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mselection\u001b[49m\u001b[43m=\u001b[49m\u001b[43mselection\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    513\u001b[39m     )\n\u001b[32m    514\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m (\n\u001b[32m    515\u001b[39m     rasterio.errors.RasterioIOError,\n\u001b[32m    516\u001b[39m     rasterio.errors.RasterBlockError,\n\u001b[32m    517\u001b[39m     rasterio.errors.WarpOperationError,\n\u001b[32m    518\u001b[39m     rasterio.errors.WindowEvaluationError,\n\u001b[32m    519\u001b[39m ) \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[32m    520\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m cfg.fail_on_error:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/eo-datascience-cookbook/lib/python3.13/site-packages/odc/loader/_rio.py:560\u001b[39m, in \u001b[36m_rio_read\u001b[39m\u001b[34m(src, cfg, dst_geobox, dst, selection)\u001b[39m\n\u001b[32m    549\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34m_rio_read\u001b[39m(\n\u001b[32m    550\u001b[39m     src: RasterSource,\n\u001b[32m    551\u001b[39m     cfg: RasterLoadParams,\n\u001b[32m   (...)\u001b[39m\u001b[32m    556\u001b[39m     \u001b[38;5;66;03m# if resampling is `nearest` then ignore sub-pixel translation when deciding\u001b[39;00m\n\u001b[32m    557\u001b[39m     \u001b[38;5;66;03m# whether we can just paste source into destination\u001b[39;00m\n\u001b[32m    558\u001b[39m     ttol = \u001b[32m0.9\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m cfg.nearest \u001b[38;5;28;01melse\u001b[39;00m \u001b[32m0.05\u001b[39m\n\u001b[32m--> \u001b[39m\u001b[32m560\u001b[39m     \u001b[38;5;28;01mwith\u001b[39;00m \u001b[43mrasterio\u001b[49m\u001b[43m.\u001b[49m\u001b[43mopen\u001b[49m\u001b[43m(\u001b[49m\u001b[43msrc\u001b[49m\u001b[43m.\u001b[49m\u001b[43muri\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mr\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msharing\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m \u001b[38;5;28;01mas\u001b[39;00m rdr:\n\u001b[32m    561\u001b[39m         \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(rdr, rasterio.DatasetReader)\n\u001b[32m    562\u001b[39m         ovr_idx: Optional[\u001b[38;5;28mint\u001b[39m] = \u001b[38;5;28;01mNone\u001b[39;00m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/eo-datascience-cookbook/lib/python3.13/site-packages/rasterio/env.py:463\u001b[39m, in \u001b[36mensure_env_with_credentials.<locals>.wrapper\u001b[39m\u001b[34m(*args, **kwds)\u001b[39m\n\u001b[32m    460\u001b[39m     session = DummySession()\n\u001b[32m    462\u001b[39m \u001b[38;5;28;01mwith\u001b[39;00m env_ctor(session=session):\n\u001b[32m--> \u001b[39m\u001b[32m463\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mf\u001b[49m\u001b[43m(\u001b[49m\u001b[43m*\u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/eo-datascience-cookbook/lib/python3.13/site-packages/rasterio/__init__.py:356\u001b[39m, in \u001b[36mopen\u001b[39m\u001b[34m(fp, mode, driver, width, height, count, crs, transform, dtype, nodata, sharing, opener, **kwargs)\u001b[39m\n\u001b[32m    353\u001b[39m     path = _parse_path(raw_dataset_path)\n\u001b[32m    355\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m mode == \u001b[33m\"\u001b[39m\u001b[33mr\u001b[39m\u001b[33m\"\u001b[39m:\n\u001b[32m--> \u001b[39m\u001b[32m356\u001b[39m     dataset = \u001b[43mDatasetReader\u001b[49m\u001b[43m(\u001b[49m\u001b[43mpath\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdriver\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdriver\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msharing\u001b[49m\u001b[43m=\u001b[49m\u001b[43msharing\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    357\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m mode == \u001b[33m\"\u001b[39m\u001b[33mr+\u001b[39m\u001b[33m\"\u001b[39m:\n\u001b[32m    358\u001b[39m     dataset = get_writer_for_path(path, driver=driver)(\n\u001b[32m    359\u001b[39m         path, mode, driver=driver, sharing=sharing, **kwargs\n\u001b[32m    360\u001b[39m     )\n\n\u001b[36mFile \u001b[39m\u001b[32mrasterio/_base.pyx:312\u001b[39m, in \u001b[36mrasterio._base.DatasetBase.__init__\u001b[39m\u001b[34m()\u001b[39m\n\n\u001b[31mRasterioIOError\u001b[39m: CURL error: Failed to connect to data.eodc.eu port 443 after 135066 ms: Could not connect to server","ename":"RasterioIOError","evalue":"CURL error: Failed to connect to data.eodc.eu port 443 after 135066 ms: Could not connect to server"}],"key":"uY6MaSAU13"}],"key":"UkXLgp3qEZ"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now plot the data.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wAHL7v1MLe"}],"key":"BydBzpCEnC"}],"key":"JXZ7tVr34m"},{"type":"block","kind":"notebook-code","data":{"jupyter":{"source_hidden":true}},"children":[{"type":"code","lang":"python","executable":true,"value":"aoi = subset.isel(time=0, x=slice(0, 500), y=slice(0, 500))\naoi_lin = 10 ** (aoi / 10)\n\nfig, ax = plt.subplots(2, 3, figsize=(14, 8))\n# upper left\nax_ul = ax[0, 0]\naoi.plot.imshow(robust=True, ax=ax_ul, cmap=\"Greys_r\")\nax_ul.set_title(r\"$\\sigma^0$ [$dB$] (robust plot)\")\nax_ul.axes.set_aspect(\"equal\")\n\n# upper middle\nax_um = ax[0, 1]\naoi.plot.imshow(robust=False, ax=ax_um, cmap=\"Greys_r\")\nax_um.set_title(r\"$\\sigma^0$ [$dB$] (not robust plot)\")\nax_um.axes.set_aspect(\"equal\")\n\n# upper right\nax_ur = ax[0, 2]\naoi.plot.hist(bins=50, ax=ax_ur, edgecolor=\"black\")\nax_ur.set_xlabel(r\"$\\sigma^0$ [$dB$]\")\nax_ur.set_title(r\"$\\sigma^0$ [$dB$] distribution\")\nax_ur.set_ylabel(\"n (number of pixels)\")\n\n# lower left\nax_ll = ax[1, 0]\naoi_lin.plot.imshow(robust=True, ax=ax_ll, cmap=\"Greys_r\")\nax_ll.set_title(r\"$\\sigma^0$ [$m^2 \\cdot m^{-2}$] (robust plot)\")\nax_ll.axes.set_aspect(\"equal\")\n\n# lower middle\nax_lm = ax[1, 1]\naoi_lin.plot.imshow(robust=False, ax=ax_lm, cmap=\"Greys_r\")\nax_lm.set_title(r\"$\\sigma^0$ [$m^2 \\cdot m^{-2}$] (not robust plot)\")\nax_lm.axes.set_aspect(\"equal\")\n\n# lower right\nax_lr = ax[1, 2]\naoi_lin.plot.hist(bins=50, ax=ax_lr, edgecolor=\"black\")\nax_lr.set_xlabel(r\"$\\sigma^0$ [$m^2 \\cdot m^{-2}$]\")\nax_lr.set_ylabel(\"n (number of pixels)\")\nax_lr.set_title(r\"$\\sigma^0$ [$m^2 \\cdot m^{-2}$] distribution\")\n\ntitle = (\n    r\"Sentinel-1 backscatter $\\sigma^0$ comparison\" r\" in linear and logarithmic domain\"\n)\nfig.suptitle(title, horizontalalignment=\"center\")\nplt.tight_layout()","key":"V9ubIblLyE"},{"type":"output","id":"jz61C7OI1VHBflDuQQl-F","data":[],"key":"bqtfs9ju4D"}],"key":"VBOC5JHDIU"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Figure 1: Visually comparing ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XdBNwKfWCS"},{"type":"inlineMath","value":"\\sigma^0","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>σ</mi><mn>0</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\sigma^0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span></span></span>","key":"Qml853NMak"},{"type":"text","value":" on a logarithmic and linear scale (left column). In addition, the benefit of using the robust plotting method is shown (middle column). The robust argument uses the 2^nd^ and 98^th^ percentiles of the data to compute the color limits to eliminate washing out the plot due to data outliers.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"r2IuXkCZVP"}],"key":"jLVhfjCPMl"}],"key":"pouH5Vs7IX"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In the plot above you can see the difference between the two scales. The values in dB are more evenly distributed and are therefore easier to plot. The values in linear scale are more spread out and are therefore harder to interpret.\nThis is why we use the dB scale for plotting/visualization.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uC9AtWBMkW"}],"key":"GUmHydZosH"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"While the logarithmic scale facilitates visual interpretation, it has implications for mathematical operations. In the following, we’ll have a closer look at this. But first, let’s see how we can convert between the linear and the logarithmic domains.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"BAZjIu7zwn"}],"key":"eDstRLhr63"},{"type":"heading","depth":2,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Conversion Formulas","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"dWQJwzHTlf"}],"identifier":"conversion-formulas","label":"Conversion Formulas","html_id":"conversion-formulas","implicit":true,"key":"N25mCfjtvc"},{"type":"paragraph","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"The decibel (dB) is a logarithmic unit used to express the ratio of two values of a physical quantity, often power or intensity. In the case of SAR data, the backscatter coefficient is often expressed in dB to facilitate visualization.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"XVzSXXGkfY"}],"key":"KQbKb4coaq"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"In order to convert the data from dB to linear scale, we use the following formula.\nLet ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"I0DkOxYUKL"},{"type":"inlineMath","value":"D","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>","key":"aeizG82W9b"},{"type":"text","value":" be the original value (dB) and ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"Lai91HghOn"},{"type":"inlineMath","value":"I","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span>","key":"CJ4dnWm30N"},{"type":"text","value":" the converted value (","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"RGLNCaKVeS"},{"type":"inlineMath","value":"m^2m^{-2}","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>m</mi><mn>2</mn></msup><msup><mi>m</mi><mrow><mo>−</mo><mn>2</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">m^2m^{-2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span>","key":"b8rxfbAHmL"},{"type":"text","value":"). The conversion of units can be expressed as:","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"bk2Cl1Nvng"}],"key":"X6wQlf5LHr"},{"type":"math","value":"D =  10  \\cdot \\log_{10} (I) = 10 \\cdot \\log_{10} (e) \\cdot \\ln (I)\\longrightarrow [dB]","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"tight":true,"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>D</mi><mo>=</mo><mn>10</mn><mo>⋅</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>10</mn></msub><mo stretchy=\"false\">(</mo><mi>I</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>10</mn><mo>⋅</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>10</mn></msub><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>ln</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>I</mi><mo stretchy=\"false\">)</mo><mo>⟶</mo><mo stretchy=\"false\">[</mo><mi>d</mi><mi>B</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">D =  10  \\cdot \\log_{10} (I) = 10 \\cdot \\log_{10} (e) \\cdot \\ln (I)\\longrightarrow [dB]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">10</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.207em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">10</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.207em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">ln</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⟶</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">]</span></span></span></span></span>","enumerator":"3","key":"c1pbmQ2A2p"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Similarly, the conversion back to the original unit can be expressed as:","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"W8FF2KgQmc"}],"key":"LlX5jcfKMb"},{"type":"math","value":"I = e^{\\frac{D}{10\\cdot \\log_{10}(e)}} = 10^{\\frac{D}{10}} \\longrightarrow [m^2m^{-2}]","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"tight":true,"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>I</mi><mo>=</mo><msup><mi>e</mi><mfrac><mi>D</mi><mrow><mn>10</mn><mo>⋅</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>10</mn></msub><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></msup><mo>=</mo><mn>1</mn><msup><mn>0</mn><mfrac><mi>D</mi><mn>10</mn></mfrac></msup><mo>⟶</mo><mo stretchy=\"false\">[</mo><msup><mi>m</mi><mn>2</mn></msup><msup><mi>m</mi><mrow><mo>−</mo><mn>2</mn></mrow></msup><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">I = e^{\\frac{D}{10\\cdot \\log_{10}(e)}} = 10^{\\frac{D}{10}} \\longrightarrow [m^2m^{-2}]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1195em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1195em;\"><span style=\"top:-3.509em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8721em;\"><span style=\"top:-2.6408em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span><span class=\"mbin mtight\">⋅</span><span class=\"mop mtight\"><span class=\"mop mtight\"><span class=\"mtight\">l</span><span class=\"mtight\">o</span><span class=\"mtight\" style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2996em;\"><span></span></span></span></span></span></span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5732em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0345em;vertical-align:-0.011em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0235em;\"><span style=\"top:-3.413em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8721em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⟶</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span>","enumerator":"4","key":"eGgY9IF0DI"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"You can find these formulas in the script for ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"OM2LSaRUuw"},{"type":"inlineCode","value":"Microwave Remote Sensing","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"g9BUq7guPU"},{"type":"text","value":" on ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"ck8JW4sakk"},{"type":"inlineCode","value":"page 136 (equation 6.40)","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"pN3hV1fkHP"},{"type":"text","value":".","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"jmzT9ACNYu"}],"key":"xOliAeTKIf"},{"type":"paragraph","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Now let’s implement the conversion in Python.","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"nbDe7NSYvq"}],"key":"f0sJN6eaTb"}],"key":"pIIaZNYH30"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def lin2db(val: float) -> float:\n    \"\"\"Converts value from linear to dB units.\n\n    :param val: Value in linear units.\n    :type val: float|int\n    :return: Value in dB.\n    :rtype: float\n    \"\"\"\n    return 10 * np.log10(val)\n\n\ndef db2lin(val: float) -> float:\n    \"\"\"Converts value from dB to linear units.\n\n    :param val: Value in dB.\n    :type val: float|int\n    :return: Value in linear units.\n    :rtype: float\n    \"\"\"\n    return 10 ** (val / 10)","key":"BFdYY4ziQh"},{"type":"output","id":"ymlgwdtBJkjeUQil8fj6e","data":[],"key":"mAL00F8g1r"}],"key":"nkCfjvPJFJ"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"When performing mathematical operations with SAR data it is important to be aware, that adding values in the logarithmic scale doesn’t work in the same way as adding regular (linear) values. This is because in the logarithmic scale, each unit step represents an equal multiplication. This means that an addition of two values in the logarithmic scale equals a multiplication of the values in the linear scale. Vice versa, a subtraction in a logarithmic scale equals a division in a linear scale. Let’s have a look at an example, where we add two values, once without the conversion to linear scale and once with the conversion to linear scale.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iVWDWq5qSp"}],"key":"lxkv4Rs3j2"}],"key":"vyIejDLnGh"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Logarithmic addition\n# Values in linear and decibel units\nval1_db, val2_db = 10, 12\n\n# Logarithmic addition\nsum_db = val1_db + val2_db\nprint(\"Logarithmic Addition:\")\nprint(f\"Logarithmic values: \\t{val1_db: <5}, {val2_db: <5} [dB]\")\nprint(f\"Logarithmic sum: \\t{val1_db} + {val2_db} = {sum_db: <5} [dB]\")\n\n# Linear addition\nval1_lin, val2_lin = db2lin(val1_db), db2lin(val2_db)\nsum_lin = val1_lin + val2_lin\nprint(\"\\nLinear Addition:\")\nprint(\n    f\"\"\"Linear values: \\t\\t{val1_lin: <5}, {val2_lin: <5.2f} [lin]\n      \\t\\t\\t(converted from dB)\"\"\"\n)\nprint(f\"Linear sum: \\t\\t{val1_lin} + {val2_lin: .2f} = {sum_lin: .2f} [lin]\")\nprint(f\"\\t\\t\\t= {lin2db(sum_lin): .2f} [dB]\")","key":"o7BdT4LAO3"},{"type":"output","id":"rTsOA5LctSjM1_dVN9UHN","data":[],"key":"ZPIyx0Gwc4"}],"key":"q6l8fJwrDI"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"As you can see, the values in dB and in linear scale differ quite a bit. In the example above, the values differ by a factor of around 6 when looked at in linear scale.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HcLtnuLR9J"}],"key":"Nt2iU9eQ48"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Now that we have some data, we will have a look at some practical examples where we will convert the data to linear scale.\nWhen we try to calculate the average ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gVlJwL8Wak"},{"type":"inlineMath","value":"\\sigma^0","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>σ</mi><mn>0</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\sigma^0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span></span></span>","key":"i0M5dThhJ3"},{"type":"text","value":" value across the scene, we need to do this by converting the data to linear scale first and then calculating the average and converting it back to dB.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HwzZ4Z9PwC"}],"key":"eTeGHhU921"},{"type":"heading","depth":2,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Creating a Monthly Mosaic","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"qGUX5zQLlV"}],"identifier":"creating-a-monthly-mosaic","label":"Creating a Monthly Mosaic","html_id":"creating-a-monthly-mosaic","implicit":true,"key":"GkmlCopxgL"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"So in the beginning we have lazily loaded data for an area across a whole year. We therefore have around 700 images. We will now essentially compress the data of each month into one timestamp. This is done by using the ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"OlKaR5jE5X"},{"type":"inlineCode","value":"resampling","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"bGP9qf5XPO"},{"type":"text","value":" method together with an operation method like ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"s1gjQtOL5t"},{"type":"inlineCode","value":"mean","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"LO8jQgnVHr"},{"type":"text","value":" that includes summation. Since the data is in dB we need to convert it to linear scale first, then we can resample the data and convert it back to dB.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"HoFQfA6G2W"}],"key":"kkb1BsraPk"}],"key":"TROpQD0CBL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Convert to linear scale and calculate monthly means\n# Conversion by calculating with the xarray Object\nsig0_lin = 10 ** (sig0_dc / 10)\n\n# Resample to monthly means. Time accepts intervals identical to the pandas\n# resample function. 'D' for days, 'W' for weeks, 'ME' for months.\nsig0_lin_monthly = sig0_lin.resample(time=\"1ME\").mean()\n\n# Convert back to dB scale\n# Conversion by applying a function\nsig0_monthly = lin2db(sig0_lin_monthly)\nsig0_monthly","key":"ePzOLxDeCn"},{"type":"output","id":"913tXVORiIkp_FySwAcPu","data":[],"key":"mCbC5AwRbp"}],"key":"K4fMO1FD9r"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The dataset has now only 12 timestamps, one for each month. Next, we want to calculate the average ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"r0kd6Dexyx"},{"type":"inlineMath","value":"\\sigma^0","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>σ</mi><mn>0</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\sigma^0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span></span></span>","key":"aTlDbjKd5v"},{"type":"text","value":" value across a subset of the scene for one month. We will do this again by converting the data to linear scale first and then calculating the average and converting it back to dB.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DX1xVreu84"}],"key":"Ojr6KJAcPW"}],"key":"Rg3EOHOmYd"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Lets take a data array with db values\ndb_array = (\n    sig0_monthly.sel(time=\"2022-07-30\", method=\"nearest\")\n    .isel(x=slice(300, 400), y=slice(500, 600))\n    .compute()\n)\n\n# Compute the linear values\nlin_array = db2lin(db_array)","key":"E1PvB4KYVh"},{"type":"output","id":"kpmkCLoSteH0_094qqpFc","data":[],"key":"nQzDXie1P4"}],"key":"D26WsiPHao"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Compute the average backscatter value in linear units across the whole scene\nlin_mean = lin_array.mean()\nprint(f\"Average backscatter value in linear units: {lin_mean.values: .3f}\")\ndb_from_lin_mean = lin2db(lin_mean)\nprint(f\"That value in dB: {db_from_lin_mean.values: .3f}\\n\")\n\n# Compute the average backscatter value in dB across the whole scene\ndb_mean = db_array.mean()\nprint(f\"Average backscatter value in dB: {db_mean.values: .3f}\")","key":"DOLGHf2SNS"},{"type":"output","id":"xv0Yz-_trnTQ6XJBeLrgL","data":[],"key":"Uy4yo3GYAE"}],"key":"WTfWwYGEEw"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"As you can see in the example, the mean values across the scene are different in dB and linear scale. Therefore, it is important to be aware in which scale the data is stored to perform the correct type of mathematical operation or always convert the data to linear scale before doing any calculations.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YiyzbnEFKR"}],"key":"RVPvRSsmUl"}],"key":"S0XNxqPQhq"}],"key":"I0yL1WQcnm"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Discover and Read SAR Data","url":"/notebooks/courses/microwave-remote-sensing/unit-01/in-class-exercise","group":"Courses"},"next":{"title":"Backscattering Coefficients","url":"/notebooks/courses/microwave-remote-sensing/unit-01/in-class-exercise-2","group":"Courses"}}},"domain":"http://localhost:3000"}